# vim: fdm=marker ft=fish.go-template

# aliases [[[ #

# personal [[[ #

# dirs [[[ #

abbr cvt "cd ~/Pictures/profile-pics/conviction"
abbr ets "cd /mnt/linux-files-2/Videos/eras-taylor-swift-movie"
abbr hv "cd /mnt/linux-files-2/Pictures/hevin"
abbr hvn "cd ~/coding/hevin-nft"
abbr lon "libreoffice ~/Documents/expenses/net-worth.ods &"
abbr lfs2 "cd /mnt/linux-files-2/Videos/shows"
abbr mj "cd /mnt/linux-files-2/Pictures/midjourney"
abbr pdg "cd ~/Pictures/profile-pics/pudgy-penguins/test"
abbr snp "cd /mnt/linux-files-2/Videos/ipad/marvel-snap"
abbr tr "cd ~/.local/share/Terraria"
abbr da "cd /mnt/ipad/DCIM/102APPLE"

# ]]] dirs #

abbr ncy "nvim ~/Documents/journal/hobbies/courtyard-drop.md"
abbr njt "nvim ~/Documents/journal/todo/24/2.md"

abbr rsn "rsync -e 'ssh -p 399' -r . 165.22.239.234:/home/kevin/hevin/art -acvv"

# ]]] personal #

# school [[[ #

abbr js "cd ~/Documents/job-search"
abbr ssad "ssh -i ~/coding/aws.pem admin@ec2-18-223-241-198.us-east-2.compute.amazonaws.com"
abbr ssa "ssh kevin@ec2-18-223-241-198.us-east-2.compute.amazonaws.com"

# ]]] school #

abbr nej "nvim ~/Documents/emojis.md"

# ]]] aliases #

# login to X [[[ #

# {{ if eq .chezmoi.username "kevin" }}
# if status is-login
    # if test -z "$DISPLAY" -a $XDG_VTNR = 1
        # exec startx -- -keeptty
    # end
# end
# set -x GPG_TTY (tty)
# {{ end }}

# ]]] login to X #

# universal var's [[[ #

set -U fish_greeting

{{ if eq .chezmoi.hostname "nzxt" }}
set -U spv_dir "/home/kevin/coding/spotify-lib-vis"
set -U mfs_dir "/home/kevin/coding/mf-site"
source /home/kevin/coding/spotify-lib-vis/src/scripts/api-keys-fish.sh
abbr hum "cd $mfs_dir && hugo serve -D --disableFastRender"
{{ end }}#]]]

# system [[[
set -x HASTE_SERVER https://pste.gq
{{ if eq .chezmoi.hostname "nzxt" }}
# set -x CALCURSE_CALDAV_PASSWORD (pass show technology/linux/baikal | head -n1)
{{ end }}
set -x LD_LIBRARY_PATH $LD_LIBRARY_PATH /usr/local/lib /usr/local/lib64
set -x GOPATH ~/go
# set -x PATH $GRAALVM_BIN $PATH ~/.local/bin ~/scripts ~/scripts/colors ~/go/bin ~/.minetest/minetest/bin ~/.gem/ruby/2.6.0/bin
set -x PATH $PATH ~/.local/bin ~/scripts ~/scripts/colors $GOPATH/bin ~/.minetest/minetest/bin ~/.gem/ruby/*/bin ~/.yarn/bin
set -x PKG_CONFIG_PATH $PKG_CONFIG_PATH /usr/lib/pkgconfig

# Java [[[ #

set -x GRAALVM_HOME /usr/lib/jvm/graalvm-ce-java11-21.1.0
set -x GRAALVM_BIN $GRAALVM_HOME/bin
set -x JAVA_HOME $GRAALVM_HOME

# set -x JAVA_HOME /usr/lib/jvm/java-11-openjdk
# set -x JAVA_HOME /usr/lib/jvm/java-8-openjdk # for shared libs

set -x PATH $JAVA_HOME/bin $PATH

# ]]] Java #

# system ]]]

# space prompt[[[
# set SPACEFISH_PROMPT_ORDER time user dir host git package node docker ruby golang php rust haskell julia aws conda pyenv kubecontext exec_time line_sep battery jobs exit_code vi_mode char
set SPACEFISH_ADD_NEWLINE false
set SPACEFISH_PROMPT_ORDER vi_mode dir git pyenv exec_time jobs exit_code line_sep char
set SPACEFISH_DIR_PREFIX ''
set SPACEFISH_DIR_TRUNC 0
set SPACEFISH_DIR_TRUNC_REPO false
set SPACEFISH_VI_MODE_INSERT ''
set SPACEFISH_VI_MODE_NORMAL '[n] '
set SPACEFISH_VI_MODE_SUFFIX ''
#]]]

# pass[[[
set -x PASSWORD_STORE_CLIP_TIME 120
set -xU XSET_RATE 90
set -xU XSET_DELAY 200
{{ if and (eq .chezmoi.hostname "x1-carbon") (not (eq .chezmoi.username "root")) }}
xset r rate $XSET_DELAY $XSET_RATE
{{ end }}#]]]

# [[[ universal var's #

set -xU BROWSER "firefox"
# set -U BROWSER "chromium"

set -xU FZF_DEFAULT_COMMAND "find ."

set -x LAPTOP_IP "192.168.0.19"
set -x PHONE_IP "192.168.0.101"
set -x PIXEL_IP "192.168.0.18"
set -x WORK_LAPTOP_IP "kmok@192.168.0.11"

{{ if eq .chezmoi.hostname "nzxt" }}
# set -x CALCURSE_CALDAV_PASSWORD (pass show technology/linux/baikal | head -n1)
set -x JENKINS_TOKEN 114a1b2e8693b57fa6f4bce88e2deee8cc
status --is-interactive; and source (pyenv init -|psub)
{{ end }}

set -xU MINIKUBE_IP "http://192.168.49.2"
set -xU LOCAL_KOGITO_SERVICE_PORT "32000"
# set -xU LOCAL_KOGITO_SERVICE_URL "$MINIKUBE_IP:$LOCAL_KOGITO_SERVICE_PORT"

set -x FLASK_DEBUG 1
set -x DB_NAME "covid_monitor"

set -x FULLNODE_API_INFO wss://api.chain.love

set -x IPAD_IMG 18

# ]]] universal var's #

# fish-specific [[[ #

fish_vi_key_bindings
set -x EDITOR nvim 
set -x VISUAL nvim 
set -U fish_help_browser firefox 

builtin cd $last_dir && ls > /dev/null
# builtin cd $last_dir
bind \ce edit_command_buffer
bind \cr forward-word

# chezmoi apply
{{ if not (eq .linux_os "termux") }}
  ~/scripts/sync-shortcuts
{{ end }}
# source ~/.config/fish/key_abbr.fish > /dev/null
set -U fish_fxn_dir "{{ .chezmoi.homeDir }}/linux-config/dot_config/fish/functions"
# set -U fish_fxn_dir "~/.config/fish/functions"
abbr ff "cd $fish_fxn_dir"
for fxn in (find $fish_fxn_dir -name '*.fish')
	source $fxn
end

abbr ab "abbr"
abbr abe "abbr -e"
abbr hm "history merge"
abbr hs "history search --show-time"
# abbr rfc "chezmoi apply && source ~/.config/fish/config.fish"
abbr f. "cd .."
abbr f.. "cd ../.."
abbr hsm "history merge"
abbr nxv "$EDITOR ~/.config/fish/fish_variables"
abbr xf "fish_config"

# ]]] fish-specific #

# fxn abbr's [[[ #

abbr ! "sudo !!"
# task [[[ #

abbr aan "task-anno ''"
abbr ae "task-edit"
abbr adl "task-delete"
abbr adn "task-done"
abbr adu "task-due"
abbr adr "task-due-rm"
abbr an "task-next"
abbr anr "task-next-rm"
abbr ant "task-notes"
abbr apr "task-mod-pri"
abbr aprl "task-mod-pri L"
abbr aprm "task-mod-pri M"
abbr aprn "task-mod-pri ''"
abbr aprh "task-mod-pri H"
abbr apj "task-mod-proj"
abbr asr "task-start"
abbr at "task-mod-tag"
abbr atj "task-mod-tag jira"
abbr aw "task-wait"
abbr ax "task-context"

# ]]] task #
abbr ag "grep-aliases"
abbr bk "buku-fzf"
abbr bkf "buku-fzf fq"
abbr bq "benq-brightness"
abbr bn "discord-burner"
abbr bun "backup nzxt"
abbr bupp "backup-phone-pics"
abbr ca "cad-to-us"
abbr cccs "sync-alt-cal class"
abbr cl "clip"
abbr cli "clip-ipad"
abbr cpc "copy cat"
abbr cpe "copy echo"
abbr cpp "copy echo (pwd)"
abbr cff "create-fish-function"
abbr ctr "systemctl-restart"
abbr def "define"
abbr drs "dump-rarity-check"
abbr fd1 "fd --changed-within 1d"
abbr ens "enable-site"
abbr ev "evince-silent"
abbr ff "fzf-cd"
# abbr fbg "find-bg"
# abbr fr "fzf-ranger"
abbr fv "fzf-vim"
abbr fvft "find-vim-filetype"
abbr gif "video-to-gif"
# git [[[ #

abbr gcamp "git-amend-push"
abbr gclg "git-clone-gitea"
abbr gdf "git-diff-files"
abbr gpsd "git-push-diff-name"
abbr gpsi "git-push-initial"
abbr gpsmt "git-push-multiple"
abbr gpng "git-push-new-gitea"
abbr gpngg "git-push-new-gitea gitea"
abbr gremotes "git-mult-remotes"
abbr grmb "git-delete-branch"
abbr gro "git-replace-origin"
abbr grog "git-replace-origin-gitea"
abbr gsmb "git-submodule-branch"

# ]]] git #
abbr i "sxiv-silent"
abbr lo "libreoffice-silent"
abbr ma "man-vim task"
abbr mat "math"
abbr mi "mpv-ipad"
abbr mn "man-vim"
abbr mdf "mkdir-cd"
abbr mps "mpv-sub"
abbr mtm "maven-test-method"
abbr pgr "grep-pdf"
abbr pgrf "grep-pdf-file"
abbr pst "pastebin"
abbr qh "qalc-history"
abbr qu "qalc-update"
abbr re "reminder ''"
abbr rf "refresh-config"
abbr rl "readlink-cp"
abbr rds "redshift-set"
abbr rmi "rm-ipad"
abbr rsi "rsync-ipad-vid"
abbr scf "scp-vid fn"
abbr sma "smol-add"
abbr smd "smol-delete"
abbr sml "smol-slist"
abbr smr "smol-replace"
abbr shrm "shred-rm"
abbr shs "scan-history"
abbr svp "server-pages"
abbr ta "tmux-attach"
abbr taa "tmux-attach atx"
abbr taf "tmux-attach fn"
abbr tam "tmux-attach misc"
abbr tan "tmux-attach nft"
abbr tan2 "tmux-attach nft-2"
abbr tao "tmux-attach obs"
abbr thes "thesaurus"
# abbr usc "us-to-cad"
abbr us "us-to-cad"
abbr ut "unix-timestamp"
abbr uzr "unzip-rm"
abbr vsnp "vim-snippet"
abbr wga "wget-all"
abbr wag "watson-add-game"
abbr waf "watson-add-game fortnite"
abbr wap "watson-add-game pokemon-go"
abbr wgn "wget-name"
abbr xya "export-pkgs"

# school [[[ #

# ]]] school #

# ]]] fxn abbr's #

# task sync > /dev/null 2>&1
# ~/scripts/xmodmap-custom
