# vim: fdm=marker ft=fish.go-template

# login to X [[[ #

{{ if eq .chezmoi.username "kevin" }}
if status is-login
    if test -z "$DISPLAY" -a $XDG_VTNR = 1
        exec startx -- -keeptty
    end
end
set -x GPG_TTY (tty)
{{ end }}

# ]]] login to X #

# universal var's [[[ #

# spv
{{ if eq .chezmoi.fullHostname "nzxt" }}
set -U spv_dir "/home/kevin/coding/spotify-lib-vis"
set -U mfs_dir "/home/kevin/coding/mf-site"
source /home/kevin/coding/spotify-lib-vis/src/scripts/api-keys-fish.sh
{{ end }}

set -x PATH $PATH ~/scripts ~/scripts/colors ~/go/bin
set -x CLASSPATH $CLASSPATH /home/kevin/java/*.jar
set -x LD_LIBRARY_PATH $LD_LIBRARY_PATH /usr/local/lib /usr/local/lib64
set -x PKG_CONFIG_PATH $PKG_CONFIG_PATH /usr/lib/pkgconfig

set -x PASSWORD_STORE_CLIP_TIME 120
set -xU XSET_RATE 90
set -xU XSET_DELAY 200
# causes xmodmap to have issues when opening terminal sometimes
# xmodmap ~/.Xmodmap && xset r rate $XSET_DELAY $XSET_RATE
{{ if and (eq .chezmoi.fullHostname "x1-carbon") (not (eq .chezmoi.username "root")) }}
xset r rate $XSET_DELAY $XSET_RATE
{{ end }}

# set -U BROWSER "chromium"
set -U BROWSER "firefox"

# ]]] universal var's #

# fish-specific [[[ #

fish_vi_key_bindings
set -x EDITOR nvim 
set -x VISUAL nvim 
set -U fish_help_browser firefox 

builtin cd $last_dir
bind \ce edit_command_buffer
bind \cr forward-word

chezmoi apply
~/scripts/sync-shortcuts
# source ~/.config/fish/key_abbr.fish > /dev/null
set -U fish_fxn_dir "{{ .chezmoi.homedir }}/linux-config/dot_config/fish/functions"
# set -U fish_fxn_dir "~/.config/fish/functions"
abbr ff "cd $fish_fxn_dir"
for fxn in (find $fish_fxn_dir -name '*.fish')
	source $fxn
end

abbr ab "abbr"
abbr abe "abbr -e"
abbr rf "chezmoi apply && sync-shortcuts && source ~/.config/fish/key_abbr.fish > /dev/null"
abbr rfc "chezmoi apply && source ~/.config/fish/config.fish"
abbr xf "fish_config"
abbr f. "cd .."
abbr f.. "cd ../.."

# ]]] fish-specific #

# fxn abbr's [[[ #

abbr ag "grep-aliases"
abbr bq "benq-brightness"
abbr cpc "copy cat"
abbr cpe "copy echo"
abbr cpp "copy echo (pwd)"
abbr cff "create-fish-function"
abbr def "define"
abbr ev "evince-silent"
abbr fbg "find-bg"
abbr fzv "fzf-vim"
# git [[[ #

abbr gcamp "git-amend-push"
abbr gdf "git-diff-files"
abbr gpsmt "git-push-multiple"
abbr gremotes "git-mult-remotes"
abbr grmb "git-delete-branch"

# ]]] git #
abbr hs "scan-history"
abbr hst "$EDITOR ~/.local/share/fish/fish_history"
abbr mt "math"
abbr pgr "grep-pdf"
abbr pgrf "grep-pdf-file"
abbr rs "redshift-set"
abbr shrm "shred-rm"
abbr thes "thesaurus"
abbr ut "unix-timestamp"
abbr uzr "unzip-rm"
abbr vsnp "vim-snippet"
abbr fvft "find-vim-filetype"

# ]]] fxn abbr's #

abbr hm "cd $mfs_dir && hugo serve -D --disableFastRender"

# school [[[ #

# 369
abbr grc "grep-c"
abbr grh "grep-headers"
abbr rgh "rg-headers"

abbr jcr "java-compile-run"
abbr jct "java-compile-test"

# ]]] school #
