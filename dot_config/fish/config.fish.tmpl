# vim: fdm=marker ft=fish.go-template

# login to X [[[ #

{{ if eq .chezmoi.username "kevin" }}
if status is-login
    if test -z "$DISPLAY" -a $XDG_VTNR = 1
        exec startx -- -keeptty
    end
end
set -x GPG_TTY (tty)
{{ end }}

# ]]] login to X #

# universal var's [[[ #

set -U fish_greeting

# spv[[[
{{ if eq .chezmoi.fullHostname "nzxt" }}
set -U spv_dir "/home/kevin/coding/spotify-lib-vis"
set -U mfs_dir "/home/kevin/coding/mf-site"
source /home/kevin/coding/spotify-lib-vis/src/scripts/api-keys-fish.sh
abbr hum "cd $mfs_dir && hugo serve -D --disableFastRender"
{{ end }}#]]]

# system[[[
set -x PATH $PATH ~/.local/bin ~/scripts ~/scripts/colors ~/go/bin ~/.minetest/minetest/bin ~/.gem/ruby/2.6.0/bin
set -x CLASSPATH $CLASSPATH /home/kevin/java/*.jar
set -x LD_LIBRARY_PATH $LD_LIBRARY_PATH /usr/local/lib /usr/local/lib64
set -x PKG_CONFIG_PATH $PKG_CONFIG_PATH /usr/lib/pkgconfig
set -x HASTE_SERVER https://pste.gq
{{ if eq .chezmoi.fullHostname "nzxt" }}
set -x CALCURSE_CALDAV_PASSWORD (pass show technology/linux/baikal | head -n1)
status --is-interactive; and source (pyenv init -|psub)
{{ end }}
#]]]

# space prompt[[[
# set SPACEFISH_PROMPT_ORDER time user dir host git package node docker ruby golang php rust haskell julia aws conda pyenv kubecontext exec_time line_sep battery jobs exit_code vi_mode char
set SPACEFISH_ADD_NEWLINE false
set SPACEFISH_PROMPT_ORDER vi_mode dir git pyenv exec_time jobs exit_code line_sep char
set SPACEFISH_DIR_PREFIX ''
set SPACEFISH_DIR_TRUNC 0
set SPACEFISH_DIR_TRUNC_REPO false
set SPACEFISH_VI_MODE_INSERT ''
set SPACEFISH_VI_MODE_NORMAL '[n] '
set SPACEFISH_VI_MODE_SUFFIX ''
#]]]

# pass[[[
set -x PASSWORD_STORE_CLIP_TIME 120
set -xU XSET_RATE 90
set -xU XSET_DELAY 200
{{ if and (eq .chezmoi.fullHostname "x1-carbon") (not (eq .chezmoi.username "root")) }}
xset r rate $XSET_DELAY $XSET_RATE
{{ end }}#]]]

# set -U BROWSER "chromium"
set -xU BROWSER "firefox"

set -xU FZF_DEFAULT_COMMAND "find ."

# ]]] universal var's #

# fish-specific [[[ #

fish_vi_key_bindings
set -x EDITOR nvim 
set -x VISUAL nvim 
set -U fish_help_browser firefox 

builtin cd $last_dir && ls > /dev/null
# builtin cd $last_dir
bind \ce edit_command_buffer
bind \cr forward-word

chezmoi apply
{{ if not (eq .linux_os "termux") }}
  ~/scripts/sync-shortcuts
{{ end }}
# source ~/.config/fish/key_abbr.fish > /dev/null
set -U fish_fxn_dir "{{ .chezmoi.homedir }}/linux-config/dot_config/fish/functions"
# set -U fish_fxn_dir "~/.config/fish/functions"
abbr ff "cd $fish_fxn_dir"
for fxn in (find $fish_fxn_dir -name '*.fish')
	source $fxn
end

abbr ab "abbr"
abbr abe "abbr -e"
abbr hm "history merge"
abbr hs "history search --show-time"
# abbr rfc "chezmoi apply && source ~/.config/fish/config.fish"
abbr f. "cd .."
abbr f.. "cd ../.."
abbr hsm "history merge"
abbr nxv "$EDITOR ~/.config/fish/fish_variables"
abbr xf "fish_config"

# ]]] fish-specific #

# fxn abbr's [[[ #

abbr ! "sudo !!"
# task [[[ #

abbr aan "task-anno"
abbr ae "task-edit"
abbr adl "task-delete"
abbr adn "task-done"
abbr adu "task-due"
abbr adr "task-due-rm"
abbr an "task-next"
abbr anr "task-next-rm"
abbr ant "task-notes"
abbr apr "task-mod-pri"
abbr aprl "task-mod-pri L"
abbr aprm "task-mod-pri M"
abbr aprn "task-mod-pri ''"
abbr aprh "task-mod-pri H"
abbr apj "task-mod-proj"
abbr asr "task-start"
abbr at "task-mod-tag"
abbr aw "task-wait"
abbr ax "task-context"

# ]]] task #
abbr ag "grep-aliases"
abbr b "buku-fzf"
abbr bf "buku-fzf fq"
abbr bq "benq-brightness"
abbr bupp "backup-phone-pics"
abbr cccs "sync-alt-cal class"
abbr cl "clip"
abbr cpc "copy cat"
abbr cpe "copy echo"
abbr cpp "copy echo (pwd)"
abbr cff "create-fish-function"
abbr ctr "systemctl-restart"
abbr def "define"
abbr ens "enable-site"
abbr ev "evince-silent"
# abbr fbg "find-bg"
abbr fr "fzf-ranger"
abbr fv "fzf-vim"
abbr fvft "find-vim-filetype"
# git [[[ #

abbr gcamp "git-amend-push"
abbr gclg "git-clone-gitea"
abbr gdf "git-diff-files"
abbr gpsi "git-push-initial"
abbr gpsmt "git-push-multiple"
abbr gpng "git-push-new-gitea"
abbr gpngg "git-push-new-gitea gitea"
abbr gremotes "git-mult-remotes"
abbr grmb "git-delete-branch"
abbr gro "git-replace-origin"
abbr grog "git-replace-origin-gitea"
abbr gsmb "git-submodule-branch"

# ]]] git #
abbr i "sxiv-silent"
# abbr m "man-vim"
abbr mn "man-vim"
abbr ma "man-vim task"
abbr mat "math"
abbr mdf "mkdir-cd"
abbr pgr "grep-pdf"
abbr pgrf "grep-pdf-file"
abbr pst "pastebin"
abbr qh "qalc-history"
abbr rf "refresh-config"
abbr rs "redshift-set"
abbr sma "smol-add"
abbr smd "smol-delete"
abbr sml "smol-slist"
abbr smr "smol-replace"
abbr shrm "shred-rm"
abbr shs "scan-history"
abbr svp "server-pages"
abbr thes "thesaurus"
abbr usc "us-to-cad"
abbr ut "unix-timestamp"
abbr uzr "unzip-rm"
abbr vsnp "vim-snippet"
abbr waf "watson-add-fortnite"
abbr xya "export-pkgs"

# school [[[ #

# 369
abbr grc "grep-c"
abbr grh "grep-headers"
abbr rgh "rg-headers"

abbr jcr "java-compile-run"
abbr jct "java-compile-test"

# ]]] school #

# ]]] fxn abbr's #

# task sync > /dev/null 2>&1
# ~/scripts/xmodmap-custom
